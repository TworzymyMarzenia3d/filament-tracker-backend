// Plik: backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// === MODELE ZWIĄZANE Z MAGAZYNEM ===

model FilamentType {
  id           Int      @id @default(autoincrement())
  manufacturer String
  material     String
  color        String
  createdAt    DateTime @default(now())
  purchases    Purchase[]
}

model Purchase {
  id               Int      @id @default(autoincrement())
  purchaseDate     DateTime
  initialWeight    Int
  currentWeight    Int
  price            Float
  currency         String
  exchangeRate     Float
  priceInPLN       Float
  costPerGramInPLN Float
  filamentType     FilamentType @relation(fields: [filamentTypeId], references: [id])
  filamentTypeId   Int
  usages           PrintUsage[]
}

// === NOWE MODELE ZWIĄZANE Z CRM ===

model Client {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  contact String?
  notes   String?
  orders  Order[]
}

model Order {
  id        Int       @id @default(autoincrement())
  orderName String
  createdAt DateTime  @default(now())
  status    String    // Np. "Nowe", "W trakcie", "Zakończone"
  client    Client    @relation(fields: [clientId], references: [id])
  clientId  Int
  printJobs PrintJob[]
}

model PrintJob {
  id             Int          @id @default(autoincrement())
  description    String?      // Opis, np. "Figurka smoka, 2 szt."
  createdAt      DateTime     @default(now())
  totalCostInPLN Float
  order          Order        @relation(fields: [orderId], references: [id])
  orderId        Int
  usages         PrintUsage[]
}

model PrintUsage {
  id             Int      @id @default(autoincrement())
  usedWeight     Int
  calculatedCost Float
  printJob       PrintJob @relation(fields: [printJobId], references: [id])
  printJobId     Int
  purchase       Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId     Int
}