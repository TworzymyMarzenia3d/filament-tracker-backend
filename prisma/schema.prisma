// OSTATECZNA WERSJA v3 - schema.prisma

generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql", url = env("DATABASE_URL") }

// ===================================
// ===     MODUŁ MAGAZYNU (ERP)    ===
// ===================================

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique // "Filament", "Żywica", "Komponent", "Usługa", "Koszt"
  products Product[]
}

model Product {
  id               Int      @id @default(autoincrement())
  
  // -- Pola Ogólne (dla wszystkich kategorii) --
  name             String   // Wygenerowana lub wpisana ręcznie nazwa
  unit             String   // "g", "ml", "szt", "kWh", "h"
  lowStockAlert    Float?   
  
  // -- Pola Specyficzne dla Kategorii "Filament" (opcjonalne) --
  manufacturer     String?  // Producent
  materialType     String?  // Typ materiału (PLA, PETG)
  color            String?  // Kolor
  diameter         Float?   // Średnica

  category         ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId       Int

  purchases        Purchase[]
  orderItems       OrderItem[]
  quotationItems   QuotationItem[]

  @@unique([name]) // Nazwa produktu musi być unikalna
}

model Purchase {
  // ... bez zmian
  id                Int      @id @default(autoincrement())
  purchaseDate      DateTime
  vendorName        String?
  initialQuantity   Float
  currentQuantity   Float
  price             Float
  currency          String
  exchangeRate      Float
  priceInPLN        Float
  costPerUnitInPLN  Float
  
  product           Product  @relation(fields: [productId], references: [id])
  productId         Int
  
  orderItemUsages   OrderItemUsage[]
  quotationItemUsages QuotationItemUsage[]
}

// ... reszta modeli (Client, Order, itd.) pozostaje BEZ ZMIAN z poprzedniej wersji ...
// ... (Wklejam je poniżej, żebyś miał cały, kompletny plik) ...

model Client {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  nip     String?
  address String?
  phone   String?
  email   String?
  notes   String?
  orders  Order[]
}

model Order {
  id              Int      @id @default(autoincrement())
  orderNumber     String   @unique
  orderName       String
  createdAt       DateTime @default(now())
  status          String
  acceptedPrice   Float?
  
  client          Client    @relation(fields: [clientId], references: [id])
  clientId        Int
  
  items           OrderItem[]
  invoice         Invoice?
}

model OrderItem {
  id              Int      @id @default(autoincrement())
  description     String?
  markupPercent   Float    @default(0)
  
  calculatedCost  Float
  sellingPrice    Float
  
  order           Order    @relation(fields: [orderId], references: [id])
  orderId         Int
  
  product         Product  @relation(fields: [productId], references: [id])
  productId       Int
  
  usages          OrderItemUsage[]
}

model OrderItemUsage {
  id             Int      @id @default(autoincrement())
  usedQuantity   Float
  calculatedCost Float
  
  orderItem      OrderItem @relation(fields: [orderItemId], references: [id])
  orderItemId    Int
  
  purchase       Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId     Int
}

model Quotation {
  id             Int      @id @default(autoincrement())
  quotationNumber String  @unique
  quotationName  String
  createdAt      DateTime @default(now())
  
  items          QuotationItem[]
}

model QuotationItem {
  id              Int      @id @default(autoincrement())
  description     String?
  markupPercent   Float    @default(0)
  
  calculatedCost  Float
  sellingPrice    Float
  
  quotation       Quotation @relation(fields: [quotationId], references: [id])
  quotationId     Int
  
  product         Product  @relation(fields: [productId], references: [id])
  productId       Int
  
  usages          QuotationItemUsage[]
}

model QuotationItemUsage {
  id             Int      @id @default(autoincrement())
  usedQuantity   Float
  calculatedCost Float
  
  quotationItem  QuotationItem @relation(fields: [quotationItemId], references: [id])
  quotationItemId Int
  
  purchase       Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId     Int
}

model Invoice {
  id             Int      @id @default(autoincrement())
  invoiceNumber  String   @unique
  issueDate      DateTime @default(now())
  dueDate        DateTime
  
  totalNet       Float
  totalVat       Float
  totalGross     Float
  
  paymentMethod  String
  isPaid         Boolean  @default(false)
  
  order          Order    @relation(fields: [orderId], references: [id])
  orderId        Int      @unique
}

model AppSettings {
  id             Int    @id @default(1)
  companyName    String
  companyNip     String
  companyAddress String
  bankAccount    String
  invoiceNumberingFormat String
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
}